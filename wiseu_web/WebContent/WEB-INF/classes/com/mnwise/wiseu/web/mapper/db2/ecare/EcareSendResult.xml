<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.EcareSendResult">
    <resultMap id="resultEcareSendResult" type="EcareSendResult">
        <result column="ecare_no"               property="ecareNo"/>
        <result column="result_seq"             property="resultSeq"/>
        <result column="result_desc"            property="resultDesc"/>
        <result column="result_sts"             property="resultSts"/>
        <result column="start_dt"               property="startDt"/>
        <result column="start_tm"               property="startTm"/>
        <result column="end_dt"                 property="endDt"/>
        <result column="end_tm"                 property="endTm"/>
        <result column="target_cnt"             property="targetCnt"/>
        <result column="send_cnt"               property="sendCnt"/>
        <result column="success_cnt"            property="successCnt"/>
        <result column="fail_cnt"               property="failCnt"/>
        <result column="unknown_user_cnt"       property="unknownUserCnt"/>
        <result column="unknown_host_cnt"       property="unknownHostCnt"/>
        <result column="smtp_except_cnt"        property="smtpExceptCnt"/>
        <result column="no_route_cnt"           property="noRouteCnt"/>
        <result column="refused_cnt"            property="refusedCnt"/>
        <result column="etc_except_cnt"         property="etcExceptCnt"/>
        <result column="invalid_address_cnt"    property="invalidAddressCnt"/>
        <result column="crtgrp_cd"              property="crtgrpCd"/>
        <result column="editor_id"              property="editorId"/>
        <result column="log_sts"                property="logSts"/>
        <result column="super_seq"              property="superSeq"/>
        <result column="resend_retry_cnt"       property="resendRetryCnt"/>
        <result column="resend_sts"             property="resendSts"/>
        <result column="returnmail_cnt"         property="returnmailCnt"/>
        <result column="manualbatch_sts"        property="manualbatchSts"/>
        <result column="tmpl_ver"               property="tmplVer"/>
        <result column="cover_ver"              property="coverVer"/>
        <result column="preface_ver"            property="prefaceVer"/>
        <result column="handler_ver"            property="handlerVer"/>
        <!--  ========== 추가 컬럼 ==========  -->
    </resultMap>

    <!--  ==================== INSERT ====================  -->
    <insert id="insertEcareSendResultByMessage" parameterType="Message">
        INSERT INTO nvecaresendresult (
            ecare_no, result_seq, result_sts, start_dt, start_tm, end_dt, end_tm, send_cnt, success_cnt, unknown_user_cnt
          , unknown_host_cnt, smtp_except_cnt, no_route_cnt, refused_cnt, etc_except_cnt, invalid_address_cnt
        ) VALUES (
            #{serviceNo}, #{resultSeq}, 'XE', #{startDt, jdbcType=CHAR}, #{startTm, jdbcType=CHAR}, #{startDt, jdbcType=CHAR}, #{startTm, jdbcType=CHAR}, 0, 0, 0
          , 0, 0, 0, 0, 0, 0
        )
    </insert>

    <!--  ==================== UPDATE ====================  -->

    <!--  ==================== DELETE ====================  -->

    <!--  ==================== SELECT ====================  -->
    <select id="selectEcareSendResultCountByPk" parameterType="map" resultType="int">
        SELECT count(*)
        FROM nvecaresendresult
        WHERE ecare_no = #{serviceNo}
        AND result_seq = #{date}
    </select>

    <select id="ecSuspendResultSeq" parameterType="int" resultType="int">
        SELECT max(result_seq)
        FROM nvecaresendresult
        WHERE ecare_no = #{ecareNo}
        AND result_sts = 'XS'
    </select>

    <select id="selectEcareSendResult" parameterType="int" resultType="int">
        SELECT ecare_no
        FROM nvecaresendresult
        WHERE ecare_no = #{ecareNo}
        GROUP BY ecare_no
    </select>

    <select id="selectEcareRealtimeDailyReportList" parameterType="map" resultMap="mapper.Common.resultRptSendResult">
        SELECT
            '0' as result_seq, a.start_dt, '000000' as start_tm, '00000000' as end_dt, '000000' as end_tm, '' resend_sts
          , coalesce(sum(a.send_cnt),0) as send_cnt, coalesce(sum(a.success_cnt),0) as success_cnt, coalesce(sum(a.returnmail_cnt),0) as returnmail_cnt
          , coalesce(sum(a.soft_bounce_cnt),0) as soft_bounce_cnt, coalesce(sum(a.hard_bounce_cnt),0) as hard_bounce_cnt
          , coalesce(b.open_cnt, 0) as open_cnt, coalesce(b.duration_cnt, 0) as duration_cnt, coalesce(b.link_cnt, 0) as link_cnt
        FROM (
            SELECT
                ecare_no, start_dt, coalesce(send_cnt, 0) as send_cnt, coalesce(success_cnt, 0) as success_cnt, coalesce(returnmail_cnt, 0) as returnmail_cnt
              , coalesce((smtp_except_cnt + no_route_cnt + refused_cnt + etc_except_cnt), 0) as soft_bounce_cnt
              , coalesce((unknown_user_cnt + unknown_host_cnt + invalid_address_cnt), 0) as hard_bounce_cnt
            FROM nvecaresendresult
            WHERE start_dt BETWEEN #{searchStartDt} AND #{searchEndDt}
            AND ecare_no = #{ecareNo}
            AND result_sts = 'XE'
        ) a LEFT OUTER JOIN (
            SELECT ecare_no, start_dt, sum(open_cnt) open_cnt, sum(duration_cnt) duration_cnt, sum(link_cnt) link_cnt
            FROM nvecarerptsendresult
            WHERE report_dt BETWEEN #{searchStartDt} AND #{searchEndDt}
            AND ecare_no = #{ecareNo}
            GROUP BY ecare_no, start_dt
        ) b
        ON a.ecare_no = b.ecare_no
        AND a.start_dt = b.start_dt
        WHERE a.start_dt BETWEEN #{searchStartDt} AND #{searchEndDt}
        AND a.ecare_no = #{ecareNo}
        GROUP BY a.start_dt, b.open_cnt, b.duration_cnt, b.link_cnt
        ORDER BY a.start_dt DESC
    </select>

    <select id="selectEcareFaxDailyReportList" parameterType="map" resultMap="mapper.Common.resultRptSendResult">
        SELECT
            0 as result_seq, start_dt, '000000' as start_tm, '00000000' as end_dt, '000000' as end_tm, '' resend_sts
          , coalesce(sum(send_cnt),0) as send_cnt, coalesce(sum(success_cnt),0) as success_cnt, 0 as returnmail_cnt
          , coalesce(sum(fail_cnt),0) as soft_bounce_cnt, 0 as hard_bounce_cnt, 0 as open_cnt, 0 as duration_cnt, 0 as link_cnt
        FROM nvecaresendresult
        WHERE start_dt BETWEEN #{searchStartDt} AND #{searchEndDt}
        AND ecare_no = #{ecareNo}
        GROUP BY start_dt
        ORDER BY start_dt DESC, result_seq
    </select>

    <select id="selectEcareScheduleDailyReportList" parameterType="map" resultMap="mapper.Common.resultRptSendResult">
        SELECT
            a.result_seq, a.start_dt, a.start_tm, a.end_dt, a.end_tm, a.resend_sts
          , coalesce(sum(a.send_cnt),0) as send_cnt, coalesce(sum(a.success_cnt),0) as success_cnt, coalesce(sum(a.returnmail_cnt),0) as returnmail_cnt
          , coalesce(sum(a.soft_bounce_cnt),0) as soft_bounce_cnt, coalesce(sum(a.hard_bounce_cnt),0) as hard_bounce_cnt
          , coalesce(b.open_cnt, 0) as open_cnt, coalesce(b.duration_cnt, 0) as duration_cnt, coalesce(b.link_cnt, 0) as link_cnt
        FROM (
            SELECT
                ecare_no, result_seq, start_dt, start_tm, end_dt, end_tm, resend_sts
              , coalesce(send_cnt, 0) as send_cnt, coalesce(success_cnt, 0) as success_cnt, coalesce(returnmail_cnt, 0) as returnmail_cnt
              , coalesce((smtp_except_cnt + no_route_cnt + refused_cnt + etc_except_cnt), 0) as soft_bounce_cnt
              , coalesce((unknown_user_cnt + unknown_host_cnt + invalid_address_cnt), 0) as hard_bounce_cnt
            FROM nvecaresendresult
            WHERE start_dt BETWEEN #{searchStartDt} AND #{searchEndDt}
            AND ecare_no = #{ecareNo}
            AND result_sts = 'XE'
            AND (resend_sts IS NULL OR resend_sts = 'F')
        ) a LEFT OUTER JOIN (
            SELECT ecare_no, result_seq, start_dt, sum(open_cnt) open_cnt, sum(duration_cnt) duration_cnt, sum(link_cnt) link_cnt
            FROM nvecarerptsendresult
            WHERE report_dt BETWEEN #{searchStartDt} AND #{searchEndDt}
            AND ecare_no = #{ecareNo}
            AND (resend_sts IS NULL OR resend_sts = 'F')
            GROUP BY ecare_no, result_seq, start_dt
        ) b
        ON a.ecare_no = b.ecare_no
        AND a.result_seq = b.result_seq
        AND a.start_dt = b.start_dt
        WHERE a.start_dt BETWEEN #{searchStartDt} AND #{searchEndDt}
        AND a.ecare_no = #{ecareNo}
        GROUP BY a.result_seq, b.open_cnt, b.duration_cnt, b.link_cnt, a.start_dt, a.start_tm, a.end_dt, a.end_tm, a.resend_sts
        ORDER BY a.start_dt, a.start_tm DESC
    </select>

    <select id="selectEcareFaxScheduleDailyReportList" parameterType="map" resultMap="mapper.Common.resultRptSendResult">
        SELECT
            result_seq, start_dt, start_tm, end_dt, end_tm, resend_sts
          , coalesce(send_cnt,0) send_cnt, coalesce(success_cnt,0) success_cnt, 0 as returnmail_cnt
          , coalesce(fail_cnt,0) as soft_bounce_cnt, 0 as hard_bounce_cnt, 0 as open_cnt, 0 as duration_cnt, 0 as link_cnt
        FROM nvecaresendresult
        WHERE start_dt BETWEEN #{searchStartDt} AND #{searchEndDt}
        AND ecare_no = #{ecareNo}
        AND (resend_sts IS NULL OR resend_sts = 'F')
        ORDER BY result_seq DESC
    </select>

    <select id="selectEcareRealtimeSendResult" parameterType="EcareScenarioInfo" resultMap="mapper.Common.resultRptSendResult">
        SELECT
            b.start_dt, '000000' as start_tm, '00000000' as end_dt, '000000' as end_tm, b.result_sts
          , coalesce(sum(b.send_cnt),0) as send_cnt, coalesce(sum(b.success_cnt),0) as success_cnt
          , coalesce(sum(b.unknown_user_cnt+b.unknown_host_cnt+invalid_address_cnt),0) as hard_bounce_cnt
          , coalesce(sum(b.smtp_except_cnt+b.no_route_cnt+b.refused_cnt+b.etc_except_cnt),0) as soft_bounce_cnt
        FROM nvecaremsg a, nvecaresendresult b
        WHERE a.ecare_no = b.ecare_no
        AND a.ecare_no = #{ecareInfoVo.ecareNo}
        AND b.start_dt = #{ecareInfoVo.reportDt}
        AND b.result_sts = 'XE'
        GROUP BY b.start_dt, b.result_sts
    </select>

    <select id="selectEcareFaxSendResult" parameterType="EcareScenarioInfo" resultMap="mapper.Common.resultRptSendResult">
        SELECT
            b.start_dt, '000000' as start_tm, max(b.end_dt) as end_dt, max(b.end_tm) as end_tm, '' result_sts
            coalesce(sum(b.send_cnt),0) as send_cnt, coalesce(sum(b.success_cnt),0) as success_cnt, 0 as hard_bounce_cnt, coalesce(sum(fail_cnt),0) as soft_bounce_cnt
        FROM nvecaremsg a, nvecaresendresult b
        WHERE a.ecare_no = b.ecare_no
        AND a.ecare_no = #{ecareInfoVo.ecareNo}
        AND b.start_dt = #{ecareInfoVo.reportDt}
        AND b.result_sts = 'XE'
        GROUP BY b.start_dt
    </select>

    <select id="selectEcareScheduleSendResult" parameterType="EcareScenarioInfo" resultMap="mapper.Common.resultRptSendResult">
        SELECT
            b.start_dt, b.start_tm, b.end_dt, b.end_tm, b.result_sts
          , coalesce(b.send_cnt,0) send_cnt, coalesce(b.success_cnt,0) success_cnt
          , coalesce(b.unknown_user_cnt+b.unknown_host_cnt+invalid_address_cnt,0) as hard_bounce_cnt
          , coalesce(b.smtp_except_cnt+b.no_route_cnt+b.refused_cnt+b.etc_except_cnt,0) as soft_bounce_cnt
        FROM nvecaremsg a, nvecaresendresult b
        WHERE a.ecare_no = b.ecare_no
        AND a.ecare_no = #{ecareInfoVo.ecareNo}
        AND b.start_dt = #{ecareInfoVo.reportDt}
        <if test="ecareInfoVo.serviceType == 'S'.toString()">
            <if test="ecareInfoVo.subType == 'S'.toString()">
        AND b.result_seq = #{ecareInfoVo.resultSeq}
            </if>
        </if>
    </select>

    <select id="selectEcareFaxScheduleSendResult" parameterType="EcareScenarioInfo" resultMap="mapper.Common.resultRptSendResult">
        SELECT
            b.start_dt, b.start_tm, b.end_dt, b.end_tm, b.result_sts
          , coalesce(send_cnt,0) send_cnt, coalesce(success_cnt,0) success_cnt, 0 as hard_bounce_cnt, coalesce(fail_cnt,0) as soft_bounce_cnt
        FROM nvecaremsg a, nvecaresendresult b
        WHERE a.ecare_no = b.ecare_no
        AND a.ecare_no = #{ecareInfoVo.ecareNo}
        AND b.start_dt = #{ecareInfoVo.reportDt}
        <if test="ecareInfoVo.serviceType == 'S'.toString()">
            <if test="ecareInfoVo.subType == 'S'.toString()">
        AND b.result_seq = #{ecareInfoVo.resultSeq}
            </if>
        </if>
    </select>

    <sql id="ecareStatListWhereQuery">
        <if test="searchServiceType != null and searchServiceType != ''">AND a.service_type = #{searchServiceType}</if>
        <if test="searchSubType     != null and searchSubType     != ''">AND a.sub_type = #{searchSubType}</if>
        <if test="ecareNo           != 0"                               >AND a.ecare_no = #{ecareNo}</if>
        <if test="userVo.grpCd      != null and userVo.grpCd      != ''">AND a.grp_cd LIKE concat(#{userVo.grpCd},'%')</if>
        <if test="userVo.userTypeCd == 'U'.toString()">
            <if test="userVo.userId != null and userVo.userId != ''">
        AND a.user_id LIKE concat(#{userVo.userId},'%')
            </if>
        </if>
        <if test="searchChannel != null and searchChannel != ''">
        AND a.channel_type = #{searchChannel}
            <if test="searchDate != null and searchDate != ''">
        AND b.report_dt LIKE concat(#{searchDate},'%')
            </if>
            <if test="searchStartDate != null and searchStartDate != ''">
        AND b.start_dt LIKE concat(#{searchStartDate},'%')
            </if>
        </if>
    </sql>

    <select id="selectEcareFAXMonthlyStat" parameterType="map" resultMap="mapper.Common.resultRptSendResult">
        SELECT
            report_dt, coalesce(sum(success_cnt),0) as success_cnt, coalesce(sum(fail_cnt),0) as fail_cnt, 0 as open_cnt
          , 0 as duration_cnt, 0 as link_cnt, 0 as returnmail_cnt
        FROM (
            SELECT substr(b.start_dt, 1, 6) as report_dt, b.success_cnt, b.fail_cnt
            FROM nvecaremsg a, nvecaresendresult b
            WHERE a.ecare_no = b.ecare_no
            <include refid="ecareStatListWhereQuery"/>
        ) c
        GROUP BY report_dt
        ORDER BY report_dt
    </select>

    <select id="selectEcareFAXDailyStat" parameterType="map" resultMap="mapper.Common.resultRptSendResult">
        SELECT
            report_dt, coalesce(sum(success_cnt),0) as success_cnt, coalesce(sum(fail_cnt),0) as fail_cnt, 0 as open_cnt
          , 0 as duration_cnt, 0 as link_cnt, 0 as returnmail_cnt
        FROM (
            SELECT a.ecare_no, a.ecare_nm, start_dt as report_dt, success_cnt, fail_cnt
            FROM nvecaremsg a, nvecaresendresult b
            WHERE a.ecare_no = b.ecare_no
            <include refid="ecareStatListWhereQuery"/>
        ) c
        GROUP BY report_dt
        ORDER BY report_dt
    </select>

    <select id="selectEcareAlimtalkDailyReportList" parameterType="map" resultMap="mapper.Common.resultRptSendResult">
        SELECT
            substr(req_dtm,1,8) as report_dt, substr(req_dtm,1,8) as start_dt, '000000' start_tm, '00000000' end_dt, '000000' end_tm
          <if test="isDaily == 'Y'.toString()">, '' as result_seq, '' resend_sts</if>
          <if test="isDaily == 'N'.toString()">, a.result_seq, a.resend_sts</if>
          , coalesce(sum(1),0) as send_cnt
          , coalesce(sum(CASE WHEN rslt_cd IN (<foreach collection="altOkCdArray" item="rsltCd" separator=",">#{rsltCd}</foreach>) THEN 1 ELSE 0 END),0) as success_cnt
          , coalesce(sum(CASE WHEN rslt_cd IN (<foreach collection="altOkCdArray" item="rsltCd" separator=",">#{rsltCd}</foreach>) THEN 0 ELSE 1 END),0) as soft_bounce_cnt
          , coalesce(sum(CASE WHEN rslt_cd NOT IN (<foreach collection="altOkCdArray" item="rsltCd" separator=",">#{rsltCd}</foreach>) AND sms_gb ='S' AND sms_snd_yn='Y' AND sms_rslt_cd IN (<foreach collection="smsOkCdArray" item="smsRsltCd" separator=",">#{smsRsltCd}</foreach>) THEN 1 ELSE 0 END),0) as sms_success_cnt
          , coalesce(sum(CASE WHEN rslt_cd NOT IN (<foreach collection="altOkCdArray" item="rsltCd" separator=",">#{rsltCd}</foreach>) AND sms_gb ='S' AND sms_snd_yn='Y' AND sms_rslt_cd NOT IN (<foreach collection="smsOkCdArray" item="smsRsltCd" separator=",">#{smsRsltCd}</foreach>) THEN 1 ELSE 0 END),0) as sms_fail_cnt
          , coalesce(sum(CASE WHEN rslt_cd NOT IN (<foreach collection="altOkCdArray" item="rsltCd" separator=",">#{rsltCd}</foreach>) AND sms_gb ='L' AND sms_snd_yn='Y' AND sms_rslt_cd IN (<foreach collection="smsOkCdArray" item="smsRsltCd" separator=",">#{smsRsltCd}</foreach>) THEN 1 ELSE 0 END),0) as lms_success_cnt
          , coalesce(sum(CASE WHEN rslt_cd NOT IN (<foreach collection="altOkCdArray" item="rsltCd" separator=",">#{rsltCd}</foreach>) AND sms_gb ='L' AND sms_snd_yn='Y' AND sms_rslt_cd NOT IN (<foreach collection="smsOkCdArray" item="smsRsltCd" separator=",">#{smsRsltCd}</foreach>) THEN 1 ELSE 0 END),0) as lms_fail_cnt
          , 0 as hard_bounce_cnt, 0 returnmail_cnt, 0 open_cnt, 0 duration_cnt, 0 link_cnt
        FROM nvecaresendresult a LEFT OUTER JOIN mzsendlog b
        ON a.ecare_no = b.service_no
        AND a.result_seq = b.result_seq
        WHERE b.req_dtm BETWEEN concat(#{searchStartDt},'000000') AND concat(#{searchEndDt},'235959')
        AND b.service_no = #{ecareNo}
        <if test="isDaily == 'Y'.toString()">
        AND (a.resend_sts IS NULL OR resend_sts = 'T')
        GROUP BY substr(b.req_dtm,1,8)
        </if>
        <if test="isDaily == 'N'.toString()">
        AND (a.resend_sts IS NULL OR resend_sts = 'F')
        GROUP BY substr(b.req_dtm,1,8), a.result_seq, a.resend_sts
        </if>
        ORDER BY substr(b.req_dtm,1,8) DESC
    </select>

    <select id="selectEcareFriendtalkDailyReportList" parameterType="map" resultMap="mapper.Common.resultRptSendResult">
        SELECT
            substr(req_dtm,1,8) as report_dt, substr(req_dtm,1,8) as start_dt, '000000' start_tm, '00000000' end_dt, '000000' end_tm
          <if test="isDaily == 'Y'.toString()">, '' as result_seq, '' resend_sts</if>
          <if test="isDaily == 'N'.toString()">, a.result_seq, a.resend_sts</if>
          , coalesce(sum(1),0) as send_cnt
          , coalesce(sum(CASE WHEN rslt_cd IN (<foreach collection="frtOkCdArray" item="rsltCd" separator=",">#{rsltCd}</foreach>) THEN 1 ELSE 0 END),0) as success_cnt
          , coalesce(sum(CASE WHEN rslt_cd IN (<foreach collection="frtOkCdArray" item="rsltCd" separator=",">#{rsltCd}</foreach>) THEN 0 ELSE 1 END),0) as soft_bounce_cnt
          , coalesce(sum(CASE WHEN sms_gb ='S' AND sms_rslt_cd IN (<foreach collection="smsOkCdArray" item="smsRsltCd" separator=",">#{smsRsltCd}</foreach>) THEN 1 ELSE 0 END),0) as sms_success_cnt
          , coalesce(sum(CASE WHEN sms_gb ='S' AND sms_rslt_cd IN (<foreach collection="smsOkCdArray" item="smsRsltCd" separator=",">#{smsRsltCd}</foreach>) THEN 0
                              WHEN sms_gb ='S' THEN 1 ELSE 0 END),0) as sms_fail_cnt
          , coalesce(sum(CASE WHEN sms_gb ='L' AND sms_rslt_cd IN (<foreach collection="smsOkCdArray" item="smsRsltCd" separator=",">#{smsRsltCd}</foreach>) THEN 1 ELSE 0 END),0) as lms_success_cnt
          , coalesce(sum(CASE WHEN sms_gb ='L' AND sms_rslt_cd IN (<foreach collection="smsOkCdArray" item="smsRsltCd" separator=",">#{smsRsltCd}</foreach>) THEN 0
                              WHEN sms_gb ='L' THEN 1 ELSE 0 END),0) as lms_fail_cnt
          , 0 as hard_bounce_cnt, 0 returnmail_cnt, 0 open_cnt, 0 duration_cnt, 0 link_cnt
        FROM nvecaresendresult a LEFT OUTER JOIN mzftsendlog b
        ON a.ecare_no = b.service_no
        AND a.result_seq = b.result_seq
        WHERE b.req_dtm BETWEEN concat(#{searchStartDt},'000000') AND concat(#{searchEndDt},'235959')
        AND b.service_no = #{ecareNo}
        <if test="isDaily == 'Y'.toString()">
        AND (a.resend_sts IS NULL OR resend_sts = 'T')
        GROUP BY substr(b.req_dtm, 1,8)
        </if>
        <if test="isDaily == 'N'.toString()">
        AND (a.resend_sts IS NULL OR resend_sts = 'F')
        GROUP BY substr(b.req_dtm, 1,8), a.result_seq, a.resend_sts
        </if>
        ORDER BY substr(b.req_dtm, 1,8) DESC
    </select>

</mapper>
