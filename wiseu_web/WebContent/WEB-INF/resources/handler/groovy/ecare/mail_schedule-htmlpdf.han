import com.mnwise.ASE.agent.dbagent.QueryExecutor
import com.mnwise.ASE.agent.mailagent.AttachFileMaker
import com.mnwise.ASE.agent.mailagent.MailAgent5
import com.mnwise.ASE.agent.mailagent.MailBody2
import com.mnwise.ASE.agent.util.EmailTraceUtil
import com.mnwise.ASE.agent.util.ExceptionLogger
import com.mnwise.ASE.agent.util.TextReader
import com.mnwise.ASE.agent.util.ValueMapper
import com.mnwise.ASE.pscript.Message
import com.mnwise.common.util.LoggerAid
import com.mnwise.common.util.StringUtil

ExceptionLogger exLogger = null
TextReader target = null
QueryExecutor queryExecutor = null
MailAgent5 mailAgent = null

try {
    exLogger = new ExceptionLogger(context)

    target = new TextReader(context)

    Message message = new Message(context)
    message.prepareGroovyTemplateWithCustomVariable("#{", "}", "<%=(record.getString(\"", "\"))%>")
    // Mail Type이 보안메일(SMAIL) 혹은 PDF(HTMLPDF) 일경우 실행
    String mailType = context.get("_MAIL_TYPE")
    if (!"NONE".equals(mailType)) {
        message.prepareGroovyTemplateWithCustomVariable("#{", "}", "<%=(record.getString(\"", "\"))%>","ATTACH", context.get("_TEMPLATE_" + mailType))
    }

    ValueMapper mapper = new ValueMapper(context, target)

    queryExecutor = new QueryExecutor(context, target, message)
    queryExecutor.init()
    queryExecutor.executeDataQueryByOnce()

    mailAgent = new MailAgent5(context)
    AttachFileMaker maker = new AttachFileMaker(context, target, message)

    while (target.next()) {
        try {
            queryExecutor.executeDataQueryByTarget()

            MailBody2 body = new MailBody2(context)
            body.setFrom(context.get("_SENDER_NM"), context.get("_SENDER_EMAIL"))
            body.setTo(target.getString(context.getInt("_NAME_FIELD_SEQ")), getEmailAddress(target))
            body.setSubject(mapper.apply(context.get("_SERVICE_PREFACE")))

            message.setBindingProperty("record", target.getRecord())
            String msg = message.execGroovyTemplate()
            if (!"Y".equals(context.get("_PREVIEW_YN")) && "BODY".equals(context.get("_OPEN_TYPE"))) {
                msg = EmailTraceUtil.insertReceiveConfirmTag(msg, context)
            }
            body.addAlterContent("text/html", msg)

            List<Map> attachList = context.get("_ATTACH_LIST")
            for (Map fileInfo : attachList) {
                // 보안메일 내 첨부파일 타입은 제외
                if (!"SMAILATT".equals(fileInfo.get("file_type"))) {
                    body.addAttachment(mapper.apply(fileInfo.get("file_name")), maker.make(fileInfo))
                }
            }

            body.makeHeader()
            body.makeBody()

            // SLOT1 ~ 10 필드 개인화
            Map additionalDataMap = new HashMap()
            for (int i = 1; i <= 10; i++) {
                additionalDataMap.put("SLOT" + i, mapper.apply(context.get("_SLOT" + i + "_FIELD")))
            }

            mailAgent.setAdditionalDataMap(additionalDataMap)
            mailAgent.setMailFrom(context.get("_RETMAIL_RECEIVER"))
            mailAgent.setRcpt(body.getRcpt(), target.getString(context.getInt("_KEY_FIELD_SEQ")), body.getName())
            mailAgent.send(body)

            context.put("_SEND_FG", "E")
            context.put("_ERROR_MESSAGE", "")
        } catch (Exception e) {
            context.put("_SEND_FG", "O")
            context.put("_ERROR_MESSAGE", StringUtil.defaultIfBlank(e.getMessage(), "Error Message is null"))
            context.put("_EXCEPTION", e)
            exLogger.write(target.toString(), e)

            if (!"Y".equals(context.get("_PREVIEW_YN"))) {
                String errMsg = LoggerAid.onlyOneLine(e).substring(0, 125)
                exLogger.insertSendLog(target, getEmailAddress(target), target.getString(context.getInt("_KEY_FIELD_SEQ")), target.getString(context.getInt("_NAME_FIELD_SEQ")), errMsg, "", "")
            }
        } finally {
            queryExecutor.executeResultQueryByTarget()
        }
    }

    queryExecutor.executeResultQueryByOnce()
} finally {
    if (exLogger != null) {
        exLogger.close()
    }
    if (target != null) {
        target.close()
    }
    if (queryExecutor != null) {
        queryExecutor.close()
    }
    if (mailAgent != null) {
        mailAgent.close()
    }
}

/*
 * 시뮬레이션 모드("SIMUL")면 발송되지 않는 연락처로 변경
 */
private String getEmailAddress(TextReader target) {
    if ("SIMUL".equals(context.get("_DEPLOY_TYPE"))) {
        return "SIMULATION"
    } else {
        return target.getString(context.getInt("_EMAIL_FIELD_SEQ"))
    }
}
