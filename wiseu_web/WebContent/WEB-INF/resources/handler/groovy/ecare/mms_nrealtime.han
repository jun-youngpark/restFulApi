import com.mnwise.ASE.agent.dbagent.QueryExecutor
import com.mnwise.ASE.agent.messageagent.MessageAgent
import com.mnwise.ASE.agent.messageagent.MessageBaseItem
import com.mnwise.ASE.agent.util.ExceptionLogger
import com.mnwise.ASE.agent.util.TextReader
import com.mnwise.ASE.agent.util.ValueMapper
import com.mnwise.ASE.pscript.Message
import com.mnwise.common.jeonmun.JsonJeonmun
import com.mnwise.common.util.LoggerAid
import com.mnwise.common.util.StringUtil

ExceptionLogger exLogger = null
TextReader target = null
QueryExecutor queryExecutor = null

try {
    exLogger = new ExceptionLogger(context)

    target = new TextReader(context)

    Message message = new Message(context)

    ValueMapper mapper = new ValueMapper(context, target)

    queryExecutor = new QueryExecutor(context, target, message)
    queryExecutor.init()
    queryExecutor.executeDataQueryByOnce()

    MessageAgent messageAgent = new MessageAgent(context)
    messageAgent.removeImageTag(context)

    message.prepareGroovyTemplateWithCustomVariable("#{", "}", "<%=(jRecord.getString(\"", "\"))%>")

    while (target.next()) {
        try {
            queryExecutor.executeDataQueryByTarget()

            MessageBaseItem item = new MessageBaseItem()
            item.setCallback(target.getString("SENDER"))
            item.setPhoneNo(getPhoneNo(target))
            item.setReqDeptId(target.getString("REQ_DEPT_ID"))
            item.setReqUserId(target.getString("REQ_USER_ID"))
            item.setReservedTime(target.getString("RESERVED_DATE"))
            item.setSeq(target.getString("SEQ"))
            item.setSubject(target.getString("SUBJECT"))
            item.setSvcId(target.getString("SVC_ID"))
            item.setUserId(target.getString("RECEIVER_ID"))
            item.setUserName(target.getString("RECEIVER_NM"))

            if ("J".equals(target.getString("TMPL_TYPE"))) {
                if (context.get("_IMAGE_FILE_CNT") != null) {
                    item.setFileCnt((Integer) context.get("_IMAGE_FILE_CNT"))
                    item.setArrFileName((String[]) context.get("_IMAGE_FILE_PATHS"))
                    item.setArrPrevFileName((String[]) context.get("_IMAGE_PREVIEW_PATHS"))
                }
                message.setBindingProperty("record", target.getRecord())
                message.setBindingProperty("jRecord", new JsonJeonmun(context.get("data1").get("JONMUN")))
                item.setMsg(message.execGroovyTemplate())
            } else {
                item.setMsg(context.get("data1").get("JONMUN"))
            }

            // SLOT1 ~ 10 필드 개인화
            Map additionalDataMap = new HashMap()
            for (int i = 1; i <= 10; i++) {
                additionalDataMap.put("SLOT" + i, mapper.apply(context.get("_SLOT" + i + "_FIELD")))
            }

            item.setAdditionalDataMap(additionalDataMap)

            messageAgent.send(item)

            context.put("_SEND_FG", "E")
            context.put("_ERROR_MESSAGE", "")
        } catch (Exception e) {
            context.put("_SEND_FG", "O")
            context.put("_ERROR_MESSAGE", StringUtil.defaultIfBlank(e.getMessage(), "Error Message is null"))
            context.put("_EXCEPTION", e)
            exLogger.write(target.toString(), e)

            if (!"Y".equals(context.get("_PREVIEW_YN"))) {
                String errMsg = LoggerAid.onlyOneLine(e).substring(0, 125)
                exLogger.insertSendLog(target, target.getString("RECEIVER"), target.getString("RECEIVER_ID"), target.getString("RECEIVER_NM"), errMsg, target.getString("SEQ"), target.getString("REQ_DEPT_ID"))
            }
        } finally {
            queryExecutor.executeResultQueryByTarget()
        }
    }

    queryExecutor.executeResultQueryByOnce()
} finally {
    if (exLogger != null) {
        exLogger.close()
    }
    if (target != null) {
        target.close()
    }
    if (queryExecutor != null) {
        queryExecutor.close()
    }
}

/*
 * 시뮬레이션 모드("SIMUL")면 발송되지 않는 연락처로 변경
 */
private String getPhoneNo(TextReader target) {
    if ("SIMUL".equals(context.get("_DEPLOY_TYPE"))) {
        return "SIMULATION"
    } else {
        return target.getString("RECEIVER")
    }
}
